# use SERIAL type for the primary key for performance reasons
STATEMENT_CREATE_GROUP_MEMBERS_TABLE = \
    CREATE TABLE jam_group_members ( \
      id SERIAL NOT NULL, \
      username VARCHAR(100) NOT NULL, \
      group_id INTEGER NOT NULL, \
      CONSTRAINT jam_p_gmemb PRIMARY KEY (id), \
      CONSTRAINT jam_f_gmemb_username FOREIGN KEY (username) REFERENCES jam_users(username), \
      CONSTRAINT jam_f_gmemb_group FOREIGN KEY (group_id) REFERENCES jam_group(group_id) \
    )
# use SERIAL type for the primary key for performance reasons
STATEMENT_CREATE_GROUP_TABLE = \
    CREATE TABLE jam_group ( \
      group_id SERIAL NOT NULL, \
      group_name VARCHAR(30) NOT NULL, \
      group_description VARCHAR(200), \
      CONSTRAINT jam_p_group PRIMARY KEY (group_id), \
      CONSTRAINT jam_u_group_name UNIQUE (group_name) \
    )
# use SERIAL type for the primary key for performance reasons
STATEMENT_CREATE_TOPIC_TABLE = \
    CREATE TABLE jam_topic ( \
      topic_id SERIAL NOT NULL, \
      virtual_wiki_id INTEGER NOT NULL, \
      namespace_id INTEGER NOT NULL, \
      topic_name VARCHAR(200) NOT NULL, \
      page_name VARCHAR(200) NOT NULL, \
      page_name_lower VARCHAR(200) NOT NULL, \
      delete_date TIMESTAMP, \
      topic_read_only INTEGER DEFAULT 0 NOT NULL, \
      topic_admin_only INTEGER DEFAULT 0 NOT NULL, \
      current_version_id INTEGER, \
      topic_type INTEGER NOT NULL, \
      redirect_to VARCHAR(200), \
      CONSTRAINT jam_p_topic PRIMARY KEY (topic_id), \
      CONSTRAINT jam_f_topic_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES jam_virtual_wiki(virtual_wiki_id), \
      CONSTRAINT jam_f_topic_namesp FOREIGN KEY (namespace_id) REFERENCES jam_namespace(namespace_id), \
      CONSTRAINT jam_u_topic_name UNIQUE (topic_name, virtual_wiki_id, delete_date) \
    )
# use SERIAL type for the primary key for performance reasons
STATEMENT_CREATE_TOPIC_VERSION_TABLE = \
    CREATE TABLE jam_topic_version ( \
      topic_version_id SERIAL NOT NULL, \
      topic_id INTEGER NOT NULL, \
      edit_comment VARCHAR(200), \
      version_content TEXT, \
      wiki_user_id INTEGER, \
      wiki_user_display VARCHAR(100) NOT NULL, \
      edit_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      edit_type INTEGER NOT NULL, \
      previous_topic_version_id INTEGER, \
      characters_changed INTEGER, \
      version_params VARCHAR(500), \
      CONSTRAINT jam_p_topic_ver PRIMARY KEY (topic_version_id), \
      CONSTRAINT jam_f_topicv_topic FOREIGN KEY (topic_id) REFERENCES jam_topic(topic_id), \
      CONSTRAINT jam_f_topicv_wuser FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_f_topicv_pver FOREIGN KEY (previous_topic_version_id) REFERENCES jam_topic_version(topic_version_id) \
    )
# use SERIAL type for the primary key for performance reasons
STATEMENT_CREATE_USER_BLOCK_TABLE = \
    CREATE TABLE jam_user_block ( \
      user_block_id SERIAL NOT NULL, \
      wiki_user_id INTEGER, \
      ip_address VARCHAR(39), \
      block_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      block_end_date TIMESTAMP, \
      block_reason VARCHAR(200), \
      blocked_by_user_id INTEGER NOT NULL, \
      unblock_date TIMESTAMP, \
      unblock_reason VARCHAR(200), \
      unblocked_by_user_id INTEGER, \
      CONSTRAINT jam_u_ublock PRIMARY KEY (user_block_id), \
      CONSTRAINT jam_f_ublock_userid FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_f_ublock_blkid FOREIGN KEY (blocked_by_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_f_ublock_unblkid FOREIGN KEY (unblocked_by_user_id) REFERENCES jam_wiki_user(wiki_user_id) \
    )
# use SERIAL type for the primary key for performance reasons
STATEMENT_CREATE_VIRTUAL_WIKI_TABLE = \
    CREATE TABLE jam_virtual_wiki ( \
      virtual_wiki_id SERIAL NOT NULL, \
      virtual_wiki_name VARCHAR(100) NOT NULL, \
      default_topic_name VARCHAR(200), \
      create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      logo_image_url VARCHAR(200), \
      site_name VARCHAR(200), \
      meta_description VARCHAR(500), \
      CONSTRAINT jam_p_vwiki PRIMARY KEY (virtual_wiki_id), \
      CONSTRAINT jam_u_vwiki_name UNIQUE (virtual_wiki_name) \
    )
# use SERIAL type for the primary key for performance reasons
STATEMENT_CREATE_WIKI_FILE_TABLE = \
    CREATE TABLE jam_file ( \
      file_id SERIAL NOT NULL, \
      virtual_wiki_id INTEGER NOT NULL, \
      file_name VARCHAR(200) NOT NULL, \
      delete_date TIMESTAMP, \
      file_read_only INTEGER DEFAULT 0 NOT NULL, \
      file_admin_only INTEGER DEFAULT 0 NOT NULL, \
      file_url VARCHAR(200) NOT NULL, \
      mime_type VARCHAR(100) NOT NULL, \
      topic_id INTEGER NOT NULL, \
      file_size INTEGER NOT NULL, \
      CONSTRAINT jam_p_file PRIMARY KEY (file_id), \
      CONSTRAINT jam_f_file_vwiki FOREIGN KEY (virtual_wiki_id) REFERENCES jam_virtual_wiki(virtual_wiki_id), \
      CONSTRAINT jam_f_file_topic FOREIGN KEY (topic_id) REFERENCES jam_topic(topic_id), \
      CONSTRAINT jam_u_file_url UNIQUE (file_url), \
      CONSTRAINT jam_u_file_topic UNIQUE (virtual_wiki_id, topic_id) \
    )
# use SERIAL type for the primary key for performance reasons
STATEMENT_CREATE_WIKI_FILE_VERSION_TABLE = \
    CREATE TABLE jam_file_version ( \
      file_version_id SERIAL NOT NULL, \
      file_id INTEGER NOT NULL, \
      upload_comment VARCHAR(200), \
      file_url VARCHAR(200) NOT NULL, \
      wiki_user_id INTEGER, \
      wiki_user_display VARCHAR(100) NOT NULL, \
      upload_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      mime_type VARCHAR(100) NOT NULL, \
      file_size INTEGER NOT NULL, \
      CONSTRAINT jam_p_file_ver PRIMARY KEY (file_version_id), \
      CONSTRAINT jam_f_filev_file FOREIGN KEY (file_id) REFERENCES jam_file(file_id), \
      CONSTRAINT jam_f_filev_wuser FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_u_filev_url UNIQUE (file_url), \
      CONSTRAINT jam_u_filev_f_id_fv_id UNIQUE (file_id, file_version_id) \
    )
# use SERIAL type for the primary key for performance reasons
STATEMENT_CREATE_WIKI_USER_TABLE = \
    CREATE TABLE jam_wiki_user ( \
      wiki_user_id SERIAL NOT NULL, \
      login VARCHAR(100) NOT NULL, \
      display_name VARCHAR(100), \
      create_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      last_login_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      create_ip_address VARCHAR(39) NOT NULL, \
      last_login_ip_address VARCHAR(39) NOT NULL, \
      email VARCHAR(100), \
      CONSTRAINT jam_p_wuser PRIMARY KEY (wiki_user_id), \
      CONSTRAINT jam_f_wuser_users FOREIGN KEY (login) REFERENCES jam_users(username) \
    )STATEMENT_CREATE_FILE_DATA_TABLE = \
    CREATE TABLE jam_file_data ( \
      file_version_id INTEGER NOT NULL, \
      resized INTEGER NOT NULL, \
      image_width INTEGER NOT NULL, \
      image_height INTEGER NOT NULL, \
      file_data BYTEA NOT NULL, \
      CONSTRAINT jam_p_file_data PRIMARY KEY (file_version_id, resized), \
      CONSTRAINT jam_f_file_data_file_version FOREIGN KEY (file_version_id) REFERENCES jam_file_version(file_version_id) \
    )
# block_end_date must be explicitly converted to string
STATEMENT_INSERT_LOG_ITEMS_BLOCK = \
    INSERT INTO jam_log ( \
      log_date, virtual_wiki_id, wiki_user_id, \
      display_name, log_type, log_comment, log_params, \
      log_sub_type, topic_id, topic_version_id \
    ) \
    SELECT \
      block_date, ?, blocked_by_user_id, \
      jam_wiki_user_2.login, ?, block_reason, \
      coalesce(jam_wiki_user.login, jam_user_block.ip_address) || '|' || coalesce(to_char(block_end_date, 'YYYY-MM-DD HH24:MI:SS'), ''), \
      ?, null, null \
    FROM jam_wiki_user jam_wiki_user_2, jam_user_block \
    LEFT OUTER JOIN jam_wiki_user ON ( \
      jam_wiki_user.wiki_user_id = jam_user_block.wiki_user_id \
    ) \
    WHERE jam_user_block.blocked_by_user_id = jam_wiki_user_2.wiki_user_id \
    AND jam_user_block.unblocked_by_user_id is null

