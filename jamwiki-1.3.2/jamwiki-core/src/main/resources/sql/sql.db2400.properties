STATEMENT_CONNECTION_VALIDATION_QUERY = \
    select 1 from sysibm.sysdummy1
# there is no "TEXT" type so use "CLOB"
STATEMENT_CREATE_TOPIC_VERSION_TABLE = \
    CREATE TABLE jam_topic_version ( \
      topic_version_id INTEGER NOT NULL, \
      topic_id INTEGER NOT NULL, \
      edit_comment VARCHAR(200), \
      version_content CLOB, \
      wiki_user_id INTEGER, \
      wiki_user_display VARCHAR(100) NOT NULL, \
      edit_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, \
      edit_type INTEGER NOT NULL, \
      previous_topic_version_id INTEGER, \
      characters_changed INTEGER, \
      version_params VARCHAR(500), \
      CONSTRAINT jam_p_topic_ver PRIMARY KEY (topic_version_id), \
      CONSTRAINT jam_f_topicv_topic FOREIGN KEY (topic_id) REFERENCES jam_topic(topic_id), \
      CONSTRAINT jam_f_topicv_wuser FOREIGN KEY (wiki_user_id) REFERENCES jam_wiki_user(wiki_user_id), \
      CONSTRAINT jam_f_topicv_pver FOREIGN KEY (previous_topic_version_id) REFERENCES jam_topic_version(topic_version_id) \
    )
# FIXME - this should be "lower(login)", but db2 doesn't like functions in unique keys
STATEMENT_CREATE_WIKI_USER_LOGIN_INDEX = \
    CREATE UNIQUE INDEX jam_u_wuser_login on jam_wiki_user (login) 
# limit and offset aren't supported
STATEMENT_INSERT_RECENT_CHANGES_VERSIONS = \
    INSERT INTO jam_recent_change ( \
      topic_version_id, topic_id, \
      topic_name, change_date, wiki_user_id, display_name, \
      edit_type, virtual_wiki_id, virtual_wiki_name, change_comment, \
      previous_topic_version_id, characters_changed, log_type, log_params \
    ) \
    select * from ( \
      SELECT \
        jam_topic_version.topic_version_id, jam_topic.topic_id, \
        jam_topic.topic_name, jam_topic_version.edit_date, \
        jam_topic_version.wiki_user_id, \
        coalesce(jam_wiki_user.login, jam_topic_version.wiki_user_display), \
        jam_topic_version.edit_type, jam_virtual_wiki.virtual_wiki_id, \
        jam_virtual_wiki.virtual_wiki_name, jam_topic_version.edit_comment, \
        jam_topic_version.previous_topic_version_id, \
        jam_topic_version.characters_changed, null, jam_topic_version.version_params \
      FROM jam_topic, jam_virtual_wiki, jam_topic_version \
      LEFT OUTER JOIN jam_wiki_user ON ( \
        jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
      ) \
      WHERE jam_topic.topic_id = jam_topic_version.topic_id \
      AND jam_topic.virtual_wiki_id = jam_virtual_wiki.virtual_wiki_id \
      AND jam_topic.delete_date is null \
      AND ( \
        jam_topic_version.edit_type in (1, 2, 3) \
        OR (jam_topic_version.edit_type = 8 AND jam_topic.current_version_id != jam_topic_version.topic_version_id) \
      ) \
      order by jam_topic_version.edit_date desc \
    ) a \
    fetch first {0} rows only
# limit and offset are not supported, use a fetch instead
STATEMENT_SELECT_CATEGORIES = \
    select * from ( \
      select * from ( \
        select distinct jam_category.category_name, jam_category.sort_key \
        from jam_topic, jam_category \
        where jam_topic.topic_id = jam_category.child_topic_id \
        and jam_topic.virtual_wiki_id = ? \
        order by sort_key \
        fetch first {0} rows only \
      ) a \
      order by sort_key desc \
      fetch first {1} rows only \
    ) b \
    order by sort_key 
# limit and offset are not supported, use a fetch instead
STATEMENT_SELECT_LOG_ITEMS = \
    select * from ( \
      select * from ( \
        select * from jam_log \
        where virtual_wiki_id = ? \
        order by log_date desc \
        fetch first {0} rows only \
      ) a \
      order by log_date \
      fetch first {1} rows only \
    ) b \
    order by log_date desc 
# limit and offset are not supported, use a fetch instead
STATEMENT_SELECT_LOG_ITEMS_BY_TYPE = \
    select * from ( \
      select * from ( \
        select * from jam_log \
        where log_type = ? and virtual_wiki_id = ? \
        order by log_date desc \
        fetch first {0} rows only \
      ) a \
      order by log_date \
      fetch first {1} rows only \
    ) b \
    order by log_date desc 
# limit and offset are not supported, use a fetch instead
STATEMENT_SELECT_RECENT_CHANGES = \
    select * from ( \
      select * from ( \
        select * from jam_recent_change \
        where virtual_wiki_name = ? \
        order by change_date desc \
        fetch first {0} rows only \
      ) a \
      order by change_date \
      fetch first {1} rows only \
    ) b \
    order by change_date desc 
# limit and offset are not supported, use a fetch instead
STATEMENT_SELECT_TOPIC_BY_TYPE = \
    select * from ( \
      select * from ( \
        select topic_name, topic_id \
        from jam_topic \
        where virtual_wiki_id = ? \
        and topic_type in (?, ?) \
        and jam_topic.namespace_id >= ? \
        and jam_topic.namespace_id <= ? \
        and delete_date is null \
        order by topic_name \
        fetch first {0} rows only \
      ) a \
      order by topic_name desc \
      fetch first {1} rows only \
    ) b \
    order by topic_name 
# limit and offset are not supported, use a fetch instead
STATEMENT_SELECT_TOPIC_HISTORY = \
    select * from ( \
      select * from ( \
        SELECT \
          jam_topic_version.topic_version_id, jam_topic.topic_id, \
          jam_topic.topic_name, jam_topic_version.edit_date as change_date, \
          jam_topic_version.wiki_user_id, \
          coalesce(jam_wiki_user.login, jam_topic_version.wiki_user_display) as display_name, \
          jam_topic_version.edit_type, jam_virtual_wiki.virtual_wiki_id, \
          jam_virtual_wiki.virtual_wiki_name, jam_topic_version.edit_comment as change_comment, \
          jam_topic_version.previous_topic_version_id, \
          jam_topic_version.characters_changed, null as log_type, \
          null as log_sub_type, \
          jam_topic_version.version_params as log_params \
        FROM jam_topic, jam_virtual_wiki, jam_topic_version \
        LEFT OUTER JOIN jam_wiki_user ON ( \
          jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
        ) \
        WHERE jam_topic.topic_id = ? \
        AND jam_topic.topic_id = jam_topic_version.topic_id \
        AND jam_topic.virtual_wiki_id = jam_virtual_wiki.virtual_wiki_id \
        AND jam_topic.delete_date is {2} null \
        order by change_date desc \
        fetch first {0} rows only \
      ) a \
      order by change_date \
      fetch first {1} rows only \
    ) b \
    order by change_date desc 
# "null as child_topic_name" must be cast
STATEMENT_SELECT_TOPIC_LINKS = \
    ( \
      select jam_topic.topic_name, \
      cast(null as varchar(200)) as child_topic_name \
      from jam_topic, jam_topic_links \
      where jam_topic.topic_id = jam_topic_links.topic_id \
      and jam_topic.virtual_wiki_id = ? \
      and jam_topic_links.link_topic_namespace_id = ? \
      and jam_topic_links.link_topic_page_name = ? \
      and jam_topic.redirect_to is null \
    ) union ( \
      select parent.topic_name, child.topic_name as child_topic_name \
      from jam_topic parent, jam_topic child, jam_topic_links \
      where child.topic_id = jam_topic_links.topic_id \
      and child.virtual_wiki_id = parent.virtual_wiki_id \
      and parent.virtual_wiki_id = ? \
      and parent.redirect_to = ? \
      and jam_topic_links.link_topic_namespace_id = parent.namespace_id \
      and jam_topic_links.link_topic_page_name = parent.page_name \
    ) \
    order by topic_name, child_topic_name
# limit and offset are not supported, use a fetch instead
STATEMENT_SELECT_TOPICS_ADMIN = \
    select * from ( \
      select * from ( \
        select topic_name from jam_topic \
        where virtual_wiki_id = ? \
        and topic_admin_only = 1 \
        and delete_date is null \
        order by topic_name \
        fetch first {0} rows only \
      ) a \
      order by topic_name desc \
      fetch first {1} rows only \
    ) b \
    order by topic_name 
# limit and offset are not supported, use a fetch instead
STATEMENT_SELECT_WATCHLIST_CHANGES = \
    select * from ( \
      select * from ( \
        select \
          jam_topic_version.topic_version_id, jam_topic_version.topic_id, \
          jam_topic_version.previous_topic_version_id, jam_topic.topic_name, \
          jam_topic_version.edit_date as change_date, jam_topic_version.edit_comment as change_comment, \
          jam_topic_version.wiki_user_id, jam_topic_version.edit_type, \
          jam_wiki_user.login as display_name, jam_topic.virtual_wiki_id, \
          jam_virtual_wiki.virtual_wiki_name, \
          jam_topic_version.characters_changed, \
          null as log_type, null as log_sub_type, \
          jam_topic_version.version_params as log_params \
        from jam_topic, jam_virtual_wiki, jam_topic_version, \
        jam_wiki_user, jam_watchlist \
        where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id \
        and jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
        and jam_topic.current_version_id = jam_topic_version.topic_version_id \
        and jam_topic.topic_name = jam_watchlist.topic_name \
        and jam_virtual_wiki.virtual_wiki_id = ? \
        and jam_watchlist.wiki_user_id = ? \
        and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5) \
        order by edit_date desc \
        fetch first {0} rows only \
      ) a \
      order by edit_date \
      fetch first {1} rows only \
    ) b \
    order by edit_date desc 
# limit and offset are not supported, use a fetch instead
STATEMENT_SELECT_WIKI_USER_CHANGES_ANONYMOUS = \
    select * from ( \
      select * from ( \
        select \
          jam_topic_version.topic_version_id, jam_topic_version.topic_id, \
          jam_topic_version.previous_topic_version_id, jam_topic.topic_name, \
          jam_topic_version.edit_date as change_date, jam_topic_version.edit_comment as change_comment, \
          jam_topic_version.wiki_user_id, jam_topic_version.edit_type, \
          jam_topic_version.wiki_user_display as display_name, \
          jam_topic.virtual_wiki_id, jam_virtual_wiki.virtual_wiki_name, \
          jam_topic_version.characters_changed, \
          null as log_type, null as log_sub_type, \
          jam_topic_version.version_params as log_params \
        from jam_topic, jam_virtual_wiki, jam_topic_version \
        where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id \
        and jam_topic.topic_id = jam_topic_version.topic_id \
        and jam_virtual_wiki.virtual_wiki_name = ? \
        and jam_topic_version.wiki_user_display = ? \
        and jam_topic_version.wiki_user_id is null \
        and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5) \
        order by edit_date desc \
        fetch first {0} rows only \
      ) a \
      order by edit_date \
      fetch first {1} rows only \
    ) b \
    order by edit_date desc 
# limit and offset are not supported, use a fetch instead
STATEMENT_SELECT_WIKI_USER_CHANGES_LOGIN = \
    select * from ( \
      select * from ( \
        select \
          jam_topic_version.topic_version_id, jam_topic_version.topic_id, \
          jam_topic_version.previous_topic_version_id, jam_topic.topic_name, \
          jam_topic_version.edit_date as change_date, jam_topic_version.edit_comment as change_comment, \
          jam_topic_version.wiki_user_id, jam_topic_version.edit_type, \
          jam_wiki_user.login as display_name, jam_topic.virtual_wiki_id, \
          jam_virtual_wiki.virtual_wiki_name, \
          jam_topic_version.characters_changed, \
          null as log_type, null as log_sub_type, \
          jam_topic_version.version_params as log_params \
        from jam_topic, jam_virtual_wiki, jam_topic_version, jam_wiki_user \
        where jam_virtual_wiki.virtual_wiki_id = jam_topic.virtual_wiki_id \
        and jam_wiki_user.wiki_user_id = jam_topic_version.wiki_user_id \
        and jam_topic.topic_id = jam_topic_version.topic_id \
        and jam_virtual_wiki.virtual_wiki_name = ? \
        and jam_wiki_user.login = ? \
        and (jam_topic.delete_date is null or jam_topic_version.edit_type = 5) \
        order by edit_date desc \
        fetch first {0} rows only \
      ) a \
      order by edit_date \
      fetch first {1} rows only \
    ) b \
    order by edit_date desc 
# limit and offset are not supported, use a fetch instead
STATEMENT_SELECT_WIKI_USERS = \
    select * from ( \
      select * from ( \
        select login \
        from jam_wiki_user \
        order by login \
        fetch first {0} rows only \
      ) a \
      order by login desc \
      fetch first {1} rows only \
    ) b \
    order by login
